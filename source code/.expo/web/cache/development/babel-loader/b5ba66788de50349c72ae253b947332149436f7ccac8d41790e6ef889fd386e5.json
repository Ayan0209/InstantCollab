{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport useAuth from \"../hooks/useAuth\";\nimport { FIREBASE_AUTH } from \"../firebase\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar staticImage = require(\"../images/LoadingBackground.png\");\nvar LoginScreen = function LoginScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var auth = FIREBASE_AUTH;\n  useEffect(function () {\n    navigation.setOptions({\n      headerShown: true\n    });\n  }, [navigation]);\n  var signIn = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield signInWithEmailAndPassword(auth, email, password);\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function signIn() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var signUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield createUserWithEmailAndPassword(auth, email, password);\n        console.log(response);\n        alert('Check your email!');\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function signUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: staticImage,\n      style: styles.background,\n      children: _jsxs(View, {\n        style: styles.buttons,\n        children: [_jsx(TextInput, {\n          value: email,\n          style: styles.input,\n          placeholder: \"Email\",\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          }\n        }), _jsx(TextInput, {\n          value: password,\n          secureTextEntry: true,\n          style: styles.input,\n          placeholder: \"Password\",\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          }\n        }), loading ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\"\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(Button, {\n            title: \"Login\",\n            onPress: signIn\n          }), _jsx(Button, {\n            title: \"Create an Account\",\n            onPress: signUp\n          })]\n        })]\n      })\n    })\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  input: {\n    marginVertical: 4,\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 4,\n    padding: 10,\n    backgroundColor: '#fff'\n  },\n  background: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  buttons: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"elevation\": {\n      \"elevation\": 3\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","View","TextInput","StyleSheet","Button","Text","ImageBackground","useAuth","FIREBASE_AUTH","ActivityIndicator","createUserWithEmailAndPassword","signInWithEmailAndPassword","useNavigation","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","staticImage","require","LoginScreen","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","auth","setOptions","headerShown","signIn","_ref","_asyncToGenerator","response","console","log","error","apply","arguments","signUp","_ref2","alert","style","styles","container","children","source","background","buttons","value","input","placeholder","autoCapitalize","onChangeText","text","secureTextEntry","size","color","title","onPress","create","flex","justifyContent","marginVertical","height","borderWidth","borderRadius","padding","backgroundColor","resizeMode","alignItems","paddingVertical","paddingHorizontal","elevation","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/ayang/Documents/InfluGuruScratchStart/influguru/screens/LoginScreen.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport {View, TextInput, StyleSheet, Button, Text, ImageBackground} from 'react-native'\r\nimport useAuth from '../hooks/useAuth'\r\nimport { FIREBASE_AUTH } from '../firebase';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst staticImage  = require(\"../images/LoadingBackground.png\");\r\nconst LoginScreen = () => {\r\n\r\n    \r\n    const navigation = useNavigation();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const auth = FIREBASE_AUTH;\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n          headerShown: true,\r\n        });\r\n      }, [navigation]);\r\n\r\n    const signIn = async () => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await signInWithEmailAndPassword(auth, email, password);\r\n            console.log(response);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const signUp = async () => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await createUserWithEmailAndPassword(auth, email, password);\r\n            console.log(response);\r\n            alert('Check your email!');\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <ImageBackground \r\n                source={staticImage}\r\n                style = {styles.background}\r\n            >\r\n                <View style={styles.buttons}>\r\n                <TextInput value={email} style={styles.input} placeholder=\"Email\" autoCapitalize=\"none\" onChangeText={(text) => setEmail(text)}></TextInput>\r\n                <TextInput value={password} secureTextEntry={true} style={styles.input} placeholder=\"Password\" autoCapitalize=\"none\" onChangeText={(text) => setPassword(text)}></TextInput>\r\n\r\n                { loading ? <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n                    : <>\r\n                        <Button title=\"Login\" onPress={signIn} />\r\n                        <Button title=\"Create an Account\" onPress={signUp} />\r\n                    </>\r\n                }\r\n                </View>\r\n            </ImageBackground>\r\n            \r\n        </View>\r\n        )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n    },\r\n    input: {\r\n        marginVertical: 4,\r\n        height: 50,\r\n        borderWidth: 1,\r\n        borderRadius: 4,\r\n        padding: 10,\r\n        backgroundColor: '#fff'\r\n    },\r\n    background: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n    },\r\n    buttons: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 32,\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}