{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { NavigationProp } from '@react-navigation/native';\nimport { FIREBASE_AUTH, db } from \"../firebase\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getAuth } from 'firebase/auth';\nimport { AntDesign, Entypo, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport Swiper from 'react-native-deck-swiper';\nimport { collection, doc, getDoc, getDocs, onSnapshot, query, serverTimestamp, setDoc, where } from 'firebase/firestore';\nimport generateId from \"../lib/generateId\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get('window').height;\nvar cardHeight = screenHeight * 0.7;\nvar HomeScreen = function HomeScreen() {\n  var navigation = useNavigation();\n  var auth = getAuth();\n  var user = auth.currentUser;\n  var staticImage = require(\"../images/Logo.png\");\n  var profile = require(\"../images/profileIcon.png\");\n  var chatIcon = require(\"../images/chat.png\");\n  var swipeRef = useRef(null);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    profiles = _useState2[0],\n    setProfiles = _useState2[1];\n  useEffect(function () {\n    return onSnapshot(doc(db, \"users\", user.uid), function (snapshot) {\n      console.log(\"Snapshot:\", snapshot);\n      if (!snapshot.exists()) {\n        navigation.navigate(\"ProfileType\");\n      }\n    });\n  }, []);\n  useEffect(function () {\n    var unsub;\n    var fetchCards = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var passes = yield getDocs(collection(db, 'users', user.uid, 'passes')).then(function (snapshot) {\n          return snapshot.docs.map(function (doc) {\n            return doc.id;\n          });\n        });\n        var swipes = yield getDocs(collection(db, 'users', user.uid, 'swipes')).then(function (snapshot) {\n          return snapshot.docs.map(function (doc) {\n            return doc.id;\n          });\n        });\n        var passedUserIds = (yield passes).length > 0 ? passes : ['test'];\n        var swipesUserIds = (yield swipes).length > 0 ? swipes : ['test'];\n        unsub = onSnapshot(query(collection(db, 'users'), where(\"id\", \"not-in\", [].concat(_toConsumableArray(passedUserIds), _toConsumableArray(swipesUserIds)))), function (snapshot) {\n          setProfiles(snapshot.docs.filter(function (doc) {\n            return doc.id !== user.uid;\n          }).map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          }));\n        });\n      });\n      return function fetchCards() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchCards();\n    return unsub;\n  }, [db]);\n  var swipeLeft = function () {\n    var _ref2 = _asyncToGenerator(function* (cardIndex) {\n      if (!profiles[cardIndex]) return;\n      var userSwiped = profiles[cardIndex];\n      console.log('You have swiped Pass on ${userSwiped.displayName}');\n      setDoc(doc(db, 'users', user.uid, 'passes', userSwiped.id), userSwiped);\n    });\n    return function swipeLeft(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var swipeRight = function () {\n    var _ref3 = _asyncToGenerator(function* (cardIndex) {\n      if (!profiles[cardIndex]) return;\n      var userSwiped = profiles[cardIndex];\n      var loggedInProfile = yield (yield getDoc(doc(db, 'users', user.uid))).data();\n      getDoc(doc(db, 'users', userSwiped.id, 'swipes', user.uid)).then(function (documentSnapshot) {\n        if (documentSnapshot.exists()) {\n          var _users;\n          console.log('You matched', userSwiped.displayName);\n          setDoc(doc(db, 'users', user.uid, 'swipes', userSwiped.id), userSwiped);\n          setDoc(doc(db, \"matches\", generateId(user.uid, userSwiped.id)), {\n            users: (_users = {}, _defineProperty(_users, user.uid, loggedInProfile), _defineProperty(_users, userSwiped.id, userSwiped), _users),\n            usersMatched: [user.uid, userSwiped.id],\n            timestamp: serverTimestamp()\n          });\n          navigation.navigate(\"Match\", {\n            loggedInProfile: loggedInProfile,\n            userSwiped: userSwiped\n          });\n        } else {\n          console.log('YOU SWIPED ON ', userSwiped.displayName);\n          setDoc(doc(db, 'users', user.uid, 'swipes', userSwiped.id), userSwiped);\n        }\n      });\n      setDoc(doc(db, 'users', user.uid, 'swipes', userSwiped.id), userSwiped);\n    });\n    return function swipeRight(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"white\",\n      barStyle: \"dark-content\"\n    }), _jsxs(View, {\n      style: styles.fullScreen,\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Modal\");\n          },\n          children: _jsx(MaterialIcons, {\n            name: \"account-circle\",\n            style: styles.imageLeft,\n            size: 50,\n            color: \"#eba134\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return FIREBASE_AUTH.signOut();\n          },\n          children: _jsx(Image, {\n            source: staticImage,\n            style: styles.imageCenter,\n            alt: \"logo\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Chat\");\n          },\n          children: _jsx(Ionicons, {\n            name: \"chatbubbles-sharp\",\n            size: 50,\n            style: styles.imageRight,\n            color: \"#eba134\"\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.cardContainer,\n        children: _jsx(Swiper, {\n          ref: swipeRef,\n          containerStyle: styles.swiperContainer,\n          cards: profiles,\n          stackSize: 2,\n          cardIndex: 0,\n          animateCardOpacity: true,\n          verticalSwipe: false,\n          onSwipedLeft: function onSwipedLeft(cardIndex) {\n            console.log('Swipe Pass');\n            swipeLeft(cardIndex);\n          },\n          onSwipedRight: function onSwipedRight(cardIndex) {\n            console.log('Swipe match');\n            swipeRight(cardIndex);\n          },\n          onTapCard: function onTapCard(cardIndex) {\n            navigation.navigate('Card', {\n              user: profiles[cardIndex]\n            });\n          },\n          overlayLabels: {\n            left: {\n              title: \"NOPE\",\n              style: {\n                label: {\n                  textAlign: \"right\",\n                  color: \"red\"\n                }\n              }\n            },\n            right: {\n              title: \"Match\",\n              style: {\n                label: {\n                  textAlign: \"left\",\n                  color: \"green\"\n                }\n              }\n            }\n          },\n          renderCard: function renderCard(card) {\n            return card ? _jsxs(View, {\n              style: [styles.card, styles.cardShadow],\n              children: [_jsx(Image, {\n                style: styles.cardImg,\n                source: {\n                  uri: card.photoURL\n                }\n              }), _jsxs(View, {\n                style: styles.cardTxt,\n                children: [_jsxs(View, {\n                  children: [_jsx(Text, {\n                    style: styles.brandName,\n                    children: card.displayName\n                  }), _jsx(Text, {\n                    style: styles.productName,\n                    children: card.gender\n                  })]\n                }), card.category && _jsx(View, {\n                  style: styles.categoryContainer,\n                  children: card.category.map(function (categoryItem, index) {\n                    return _jsx(View, {\n                      style: styles.categoryItemContainer,\n                      children: _jsx(Text, {\n                        style: styles.categoryItemText,\n                        children: categoryItem\n                      })\n                    }, index);\n                  })\n                })]\n              })]\n            }, card.id) : _jsxs(View, {\n              style: [styles.card, styles.cardShadow],\n              children: [_jsx(Text, {\n                style: [styles.text],\n                children: \"No more profiles\"\n              }), _jsx(Image, {\n                style: [styles.cardImg],\n                source: {\n                  uri: \"https://cdn-icons-png.flaticon.com/512/6009/6009746.png\"\n                }\n              })]\n            });\n          }\n        })\n      }), _jsxs(View, {\n        style: styles.swipeButtons,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.crossButton,\n          onPress: function onPress() {\n            return swipeRef.current.swipeLeft();\n          },\n          children: _jsx(Entypo, {\n            name: \"cross\",\n            size: 24,\n            color: \"red\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.heartButton,\n          onPress: function onPress() {\n            return swipeRef.current.swipeRight();\n          },\n          children: _jsx(AntDesign, {\n            name: \"heart\",\n            size: 24,\n            color: \"green\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  fullScreen: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  deck: {\n    flex: 1\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  imageLeft: {\n    marginLeft: 10\n  },\n  imageCenter: {\n    width: 50,\n    height: 50\n  },\n  imageRight: {\n    width: 65,\n    height: 50,\n    marginRight: 10\n  },\n  text: {\n    fontSize: 50,\n    margin: 50,\n    justifyContent: 'center'\n  },\n  cardContainer: {\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingBottom: 10\n  },\n  swiperContainer: {\n    flex: 1,\n    backgroundColor: 'transparent'\n  },\n  card: {\n    position: 'relative',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 16,\n    height: cardHeight\n  },\n  cardImg: {\n    position: 'absolute',\n    borderRadius: 10,\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%'\n  },\n  cardTxt: {\n    position: 'absolute',\n    borderRadius: 10,\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    backgroundColor: 'white',\n    padding: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  brandName: {\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  productName: {\n    fontSize: 16\n  },\n  category: {\n    fontStyle: 'italic'\n  },\n  cardShadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  swipeButtons: {\n    position: 'absolute',\n    bottom: 16,\n    left: 16,\n    right: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  crossButton: {\n    backgroundColor: 'rgba(196, 69, 47, 0.5)',\n    borderRadius: 20,\n    padding: 8\n  },\n  heartButton: {\n    backgroundColor: 'rgba(47, 196, 50, 0.5)',\n    borderRadius: 20,\n    padding: 8\n  },\n  categoryContainer: {\n    flexDirection: 'row',\n    marginTop: 8\n  },\n  categoryItemContainer: {\n    backgroundColor: 'rgba(227, 151, 39, 0.7)',\n    borderRadius: 10,\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    marginRight: 4\n  },\n  categoryItemText: {\n    color: 'white',\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["useNavigation","React","useEffect","useLayoutEffect","useRef","useState","View","Text","Button","Image","StyleSheet","ImageBackground","Dimensions","NavigationProp","FIREBASE_AUTH","db","SafeAreaView","TouchableOpacity","getAuth","AntDesign","Entypo","Ionicons","MaterialIcons","Swiper","collection","doc","getDoc","getDocs","onSnapshot","query","serverTimestamp","setDoc","where","generateId","StatusBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenHeight","get","height","cardHeight","HomeScreen","navigation","auth","user","currentUser","staticImage","require","profile","chatIcon","swipeRef","_useState","_useState2","_slicedToArray","profiles","setProfiles","uid","snapshot","console","log","exists","navigate","unsub","fetchCards","_ref","_asyncToGenerator","passes","then","docs","map","id","swipes","passedUserIds","length","swipesUserIds","concat","_toConsumableArray","filter","_objectSpread","data","apply","arguments","swipeLeft","_ref2","cardIndex","userSwiped","_x","swipeRight","_ref3","loggedInProfile","documentSnapshot","_users","displayName","users","_defineProperty","usersMatched","timestamp","_x2","children","backgroundColor","barStyle","style","styles","fullScreen","container","onPress","name","imageLeft","size","color","signOut","source","imageCenter","alt","imageRight","cardContainer","ref","containerStyle","swiperContainer","cards","stackSize","animateCardOpacity","verticalSwipe","onSwipedLeft","onSwipedRight","onTapCard","overlayLabels","left","title","label","textAlign","right","renderCard","card","cardShadow","cardImg","uri","photoURL","cardTxt","brandName","productName","gender","category","categoryContainer","categoryItem","index","categoryItemContainer","categoryItemText","text","swipeButtons","crossButton","current","heartButton","create","flex","deck","flexDirection","justifyContent","alignItems","marginLeft","width","marginRight","fontSize","margin","paddingHorizontal","paddingBottom","position","borderRadius","padding","top","bottom","fontWeight","fontStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingVertical","marginTop"],"sources":["C:/Users/ayang/Documents/InfluGuruScratchStart/influguru/screens/HomeScreen.js"],"sourcesContent":["import { useNavigation } from '@react-navigation/native'\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport {View, Text, Button, Image, StyleSheet, ImageBackground, Dimensions} from 'react-native'\r\nimport { NavigationProp } from '@react-navigation/native'\r\nimport { FIREBASE_AUTH, db } from '../firebase'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { AntDesign, Entypo, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\nimport Swiper from 'react-native-deck-swiper';\r\nimport { collection, doc, getDoc, getDocs, onSnapshot, query, serverTimestamp, setDoc, where } from 'firebase/firestore'\r\nimport generateId from '../lib/generateId'\r\nimport { StatusBar } from 'react-native';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\nconst cardHeight = screenHeight * 0.7;\r\n\r\nconst HomeScreen = () => {\r\n    const navigation = useNavigation();\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n    const staticImage = require(\"../images/Logo.png\");\r\n    const profile = require(\"../images/profileIcon.png\");\r\n    const chatIcon = require(\"../images/chat.png\");  \r\n    const swipeRef = useRef(null);\r\n    const [profiles, setProfiles] = useState([]);\r\n    \r\n    //console.log('This is home screen user: ', user);\r\n\r\n    useEffect(() => \r\n        onSnapshot(doc(db, \"users\", user.uid), (snapshot) => {\r\n            console.log(\"Snapshot:\", snapshot)\r\n            if(!snapshot.exists()){\r\n                navigation.navigate(\"ProfileType\");\r\n            }\r\n        }),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        let unsub;\r\n\r\n        const fetchCards = async () =>{\r\n\r\n            const passes = await getDocs(collection(db, 'users', user.uid, 'passes')).then(\r\n                (snapshot) => snapshot.docs.map((doc) => doc.id)\r\n            );\r\n            \r\n            const swipes = await getDocs(collection(db, 'users', user.uid, 'swipes')).then(\r\n                (snapshot) => snapshot.docs.map((doc) => doc.id)\r\n            );\r\n\r\n            const passedUserIds = (await passes).length > 0 ? passes : ['test'];\r\n            const swipesUserIds = (await swipes).length > 0 ? swipes : ['test'];\r\n\r\n            unsub = onSnapshot(query(collection(db, 'users'), where(\"id\", \"not-in\", [...passedUserIds, ...swipesUserIds])), snapshot => {\r\n                setProfiles(\r\n                    snapshot.docs.filter(doc => doc.id !== user.uid).map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    }))\r\n                );\r\n            });\r\n        };\r\n\r\n        fetchCards();\r\n        return unsub;\r\n    }, [db])\r\n\r\n    const swipeLeft = async (cardIndex) => {\r\n        if(!profiles[cardIndex]) return;\r\n\r\n        const userSwiped = profiles[cardIndex];\r\n        console.log('You have swiped Pass on ${userSwiped.displayName}');\r\n\r\n        setDoc(doc(db, 'users', user.uid, 'passes', userSwiped.id), userSwiped);\r\n    }\r\n\r\n    const swipeRight = async (cardIndex) => {\r\n        if(!profiles[cardIndex]) return;\r\n\r\n        const userSwiped = profiles[cardIndex];\r\n\r\n        const loggedInProfile = await (await getDoc(doc(db, 'users', user.uid))).data();\r\n\r\n        getDoc(doc(db, 'users', userSwiped.id, 'swipes', user.uid)).then(\r\n            (documentSnapshot) => {\r\n\r\n                if(documentSnapshot.exists()){\r\n                    //user matched \r\n                    console.log('You matched', userSwiped.displayName);\r\n                    setDoc(doc(db, 'users', user.uid, 'swipes', userSwiped.id), userSwiped);\r\n                    //CREATE MATCH\r\n                    setDoc(doc(db, \"matches\", generateId(user.uid,userSwiped.id)),{\r\n                        users: {\r\n                            [user.uid]: loggedInProfile,\r\n                            [userSwiped.id]: userSwiped\r\n                        },\r\n                        usersMatched: [user.uid, userSwiped.id],\r\n                        timestamp: serverTimestamp()\r\n                    })\r\n                    navigation.navigate(\"Match\", {\r\n                        loggedInProfile, userSwiped\r\n                    })\r\n                }\r\n                else{\r\n                    console.log('YOU SWIPED ON ', userSwiped.displayName);\r\n                    setDoc(doc(db, 'users', user.uid, 'swipes', userSwiped.id), userSwiped);\r\n                }\r\n\r\n            } \r\n            \r\n        )\r\n\r\n        setDoc(doc(db, 'users', user.uid, 'swipes', userSwiped.id), userSwiped);\r\n    }\r\n\r\n    //console.log(profiles);\r\n\r\n    return(\r\n        <>\r\n        <StatusBar backgroundColor=\"white\" barStyle=\"dark-content\" />\r\n        <View style={styles.fullScreen}>\r\n            <View style={styles.container}>\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"Modal\")}>\r\n                    <MaterialIcons name=\"account-circle\" style={styles.imageLeft} size={50} color=\"#eba134\" />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => FIREBASE_AUTH.signOut()}>\r\n                    <Image source={staticImage} style={styles.imageCenter} alt=\"logo\"/>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"Chat\")}>\r\n                    <Ionicons name=\"chatbubbles-sharp\" size={50} style={styles.imageRight} color=\"#eba134\"/>\r\n                </TouchableOpacity>             \r\n            </View>\r\n            <View style={styles.cardContainer}>\r\n                <Swiper \r\n                    ref={swipeRef}\r\n                    containerStyle={styles.swiperContainer}\r\n                    cards={profiles}\r\n                    stackSize={2}\r\n                    cardIndex={0}\r\n                    animateCardOpacity\r\n                    verticalSwipe={false}\r\n                    onSwipedLeft={(cardIndex) => {\r\n                        console.log('Swipe Pass')\r\n                        swipeLeft(cardIndex)\r\n                    }}\r\n                    onSwipedRight={(cardIndex) => {\r\n                        console.log('Swipe match')\r\n                        swipeRight(cardIndex)\r\n                    }}\r\n                    onTapCard={(cardIndex) => {\r\n                        //console.log('passed user is', profiles[cardIndex])\r\n                        navigation.navigate('Card', { user: profiles[cardIndex] })\r\n                    }}\r\n                    overlayLabels={{\r\n                        left: {\r\n                            title: \"NOPE\",\r\n                            style: {\r\n                                label: {\r\n                                    textAlign: \"right\",\r\n                                    color: \"red\",\r\n                                },\r\n                            },\r\n                        },\r\n                        right: {\r\n                            title: \"Match\",\r\n                            style: {\r\n                                label: {\r\n                                    textAlign: \"left\",\r\n                                    color: \"green\",\r\n                                },\r\n                            },\r\n                        }\r\n                    }}\r\n                    renderCard={(card) =>\r\n                        card ? (\r\n                          \r\n                          <View key={card.id} style={[styles.card, styles.cardShadow]}>\r\n                            <Image style={styles.cardImg} source={{ uri: card.photoURL }} />\r\n                            <View style={styles.cardTxt}>\r\n                              <View>\r\n                                <Text style={styles.brandName}>{card.displayName}</Text>\r\n                                <Text style={styles.productName}>{card.gender}</Text>\r\n                              </View>\r\n                              {card.category && (\r\n                                <View style={styles.categoryContainer}>\r\n                                  {card.category.map((categoryItem, index) => (\r\n                                    <View key={index} style={styles.categoryItemContainer}>\r\n                                      <Text style={styles.categoryItemText}>{categoryItem}</Text>\r\n                                    </View>\r\n                                  ))}\r\n                                </View>\r\n                              )}\r\n                            </View>\r\n                          </View>\r\n                        ) : (\r\n                        <View style={[styles.card, styles.cardShadow]}>\r\n                            <Text style={[styles.text]}>No more profiles</Text>\r\n                            <Image\r\n                                style={[styles.cardImg]}\r\n                                source={{uri: \"https://cdn-icons-png.flaticon.com/512/6009/6009746.png\"}} \r\n                                />\r\n                        </View>\r\n                    )}\r\n                />\r\n            </View>\r\n            <View style={styles.swipeButtons}>\r\n                <TouchableOpacity style={styles.crossButton} onPress={() => swipeRef.current.swipeLeft()}>\r\n                    <Entypo name=\"cross\" size={24} color=\"red\"/>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.heartButton} onPress={() => swipeRef.current.swipeRight()}>\r\n                    <AntDesign name=\"heart\" size={24} color=\"green\"/>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    fullScreen: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    deck: {\r\n        flex: 1,\r\n    },\r\n    container: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n    },\r\n    imageLeft: {\r\n        marginLeft: 10,\r\n    },\r\n    imageCenter: {\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n    imageRight: {\r\n        width: 65,\r\n        height: 50,\r\n        marginRight: 10,\r\n    },\r\n    text: {\r\n        fontSize: 50,\r\n        margin: 50,\r\n        justifyContent: 'center',\r\n    },\r\n    cardContainer: {\r\n        flex: 1,\r\n        paddingHorizontal: 10,\r\n        paddingBottom: 10,\r\n    },\r\n    swiperContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n    },\r\n    card: {\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n        borderRadius: 10,\r\n        padding: 16,\r\n        height: cardHeight,\r\n    },\r\n    cardImg: {\r\n        position: 'absolute',\r\n        borderRadius: 10,\r\n        top: 0,\r\n        left: 0,\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    cardTxt: {\r\n        position: 'absolute',\r\n        borderRadius: 10,\r\n        bottom: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        padding: 16,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n      },\r\n      brandName: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n      },\r\n      productName: {\r\n        fontSize: 16,\r\n      },\r\n      category: {\r\n        fontStyle: 'italic',\r\n      },\r\n      cardShadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 1.41,\r\n        elevation: 2,\r\n\r\n      },\r\n      swipeButtons: {\r\n        position: 'absolute',\r\n        bottom: 16,\r\n        left: 16,\r\n        right: 16,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n        borderRadius: 10,\r\n        paddingVertical: 8,\r\n        paddingHorizontal: 16,\r\n      },\r\n      crossButton: {\r\n        backgroundColor: 'rgba(196, 69, 47, 0.5)',\r\n        borderRadius: 20,\r\n        padding: 8,\r\n      },\r\n      heartButton: {\r\n        backgroundColor: 'rgba(47, 196, 50, 0.5)',\r\n        borderRadius: 20,\r\n        padding: 8,\r\n      },\r\n      categoryContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 8,\r\n      },\r\n      categoryItemContainer: {\r\n        backgroundColor: 'rgba(227, 151, 39, 0.7)',\r\n        borderRadius: 10,\r\n        paddingVertical: 4,\r\n        paddingHorizontal: 8,\r\n        marginRight: 4,\r\n      },\r\n      categoryItemText: {\r\n        color: 'white',\r\n        fontSize: 14,\r\n      },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}